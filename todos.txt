TODO: print actually useful info on the screen
 - a dot for every hopper_step retry (and debug info if the dots get too numerous)
 - the stage hopper_step is currently in (for performance profiling)
 - number of sources and destinations
 - transfer count for the last iteration (useful with void)
 - a console to type one-off hopper commands
 - a better way to view dozens of commands separated by `/`

TODO: -nap for shorter sleeps some period after a successful transfer (-nap 0 1 to -sleep 0 for 1 whole second after a success)

TODO: AE2-style machine autocrafting (crafting table autocrafting can be made with a turtle autocrafter)


FIXME: propagate and reset errors correctly
TODO: parallelism! (for massive furnace stacks and other massive logistics)
	parallel scans will be easy and will go a long way on their own

	precompute all operations that need to be done and add them to a queue, then merge temporary storages into one
	  this can probably be more easily done inside TIL
	have a dozen threads (INSIDE TIL!) eat at the queue of operations to be done

TODO: `//` comments
TODO: hopper repl to avoid restarts when using `-storage`

TODO: TIL speed up item pulling operations by transferring full slots directly into empty slots if there are any
TODO: TIL speed up item pushing operations by transferring directly from full slots into empty slots




TODO: -spread to distribute items evenly

TODO: rice cooker functionality

TODO: negative index should count from the last slot (-1 for last slot)

TODO: request logistics (factorio requester/provider chests)
 - kanban?

TODO: conditional transfer (based on whether the previous command succeeded?)
  items can block each other, thus you can make a transfer happen only if that slot is free by passing items through said slot
TODO: some way to treat chests as queues

